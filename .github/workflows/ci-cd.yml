name: Python CI/CD with AWS Lambda

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-test-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v4

      # Step 2: Set up Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          pip install pytest

      # Step 4: Run tests (skip if no tests)
            # Step 4: Run tests (fixed with PYTHONPATH)
      - name: Run tests
        run: |
          export PYTHONPATH=$PYTHONPATH:$(pwd)/src
          if [ -d tests ]; then pytest -q; else echo "No tests found, skipping"; fi

      # Step 5: Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Step 6: Package Lambda function
      - name: Package Lambda function
        run: |
          mkdir package
          # Install dependencies into package/
          pip install --target ./package -r requirements.txt
          # Copy your src/ code into package
          cp -r src/* package/
          # Create deployment zip
          cd package
          zip -r ../function.zip .
          cd ..

      # Step 7: Deploy Lambda function
            # Step 7: Deploy Lambda function (create if missing)
      - name: Deploy Lambda
        run: |
          set -e
          FUNCTION_NAME="my-python-function"
          ZIP_FILE="function.zip"
          REGION="${{ secrets.AWS_REGION }}"

          # Check if Lambda exists
          if aws lambda get-function --function-name $FUNCTION_NAME >/dev/null 2>&1; then
            echo "Updating existing Lambda function..."
            aws lambda update-function-code \
              --function-name $FUNCTION_NAME \
              --zip-file fileb://$ZIP_FILE \
              --region $REGION
          else
            echo "Creating new Lambda function..."
            aws lambda create-function \
              --function-name $FUNCTION_NAME \
              --runtime python3.11 \
              --role arn:aws:iam::${{ secrets.AWS_ACCOUNT_ID }}:role/LambdaBasicExecutionRole \
              --handler app.lambda_handler \
              --zip-file fileb://$ZIP_FILE \
              --region $REGION
          fi